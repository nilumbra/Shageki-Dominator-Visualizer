parse(
{"input": 
  {
  　 "height":[...],
   　"risingSpeed":[...]
   },

"steps": 
  [
    ########### Setting of for Binary Search ###########
    {
    "status": "calculatingUpperbound" # Note for javascript dev: e -> calculatingUpperbound(<height>, <risingSpeed>)
    },
    {
    "value":  <upperbound>,
    "status": "settingRight" # Note for javascript dev: e -> settingRight(
    },
    ########### Setting of for Binary Search ###########
    #####
    ########### Binary Search Iteration ###########
    {
     "value": [<left>, <right>],
     "status": "calculatingMid" # Note for javascript dev: e -> calculatingMid(mid)
    },
    {
     "value": <mid>,
     "status": "drawMid" # Note for javascript dev: e -> drawLine(mid)
    },
    {
     "value": <boolean>,
     "status": "isAboveOriginalHeight"
    },
    {
     "status": "isKaboomedBelowMid", ## SHOOTING OFF BALLOONS... ## 
     # Note for javascript dev: e -> refreshBalloonView()

     ## REALISTIC SAMPLE ##
     ## [[ (index(h1) => 1) , Boolean(isBelowMid?)],]
      "value": [[1, True], [4, True],...]
    },
    {
     "value": ["right/left", <mid>],
     "status": "updateBound"
    },
    {
      ...repeating until (right - left > 1) == false
    },
    ########### Binary Search Iteration ###########
    #####
    ########### AnswerFound ###########
    {
     "value": mid,
     "status": "answerFound"
    }
  ]        
})
